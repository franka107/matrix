name: Flutter Build APK

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper versioning
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.19.0
      
      - name: Generate version number
        id: version
        run: |
          git fetch --tags
          VERSION=""
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Use tag name as version if running from tag
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            # Otherwise use tag+commits
            LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
            LAST_TAG=${LAST_TAG#v}
            COMMIT_COUNT=$(git rev-list --count HEAD)
            SHORT_SHA=$(git rev-parse --short HEAD)
            VERSION="${LAST_TAG}+${COMMIT_COUNT}.${SHORT_SHA}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Generated version: $VERSION"
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build APK
        run: flutter build apk --build-name=${{ env.VERSION }} --build-number=${{ github.run_number }}
      
      - name: Rename APK with version
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/matrix-${{ env.VERSION }}.apk
      
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: matrix-${{ env.VERSION }}.apk
          path: build/app/outputs/flutter-apk/matrix-${{ env.VERSION }}.apk
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/matrix-${{ env.VERSION }}.apk
          name: Release ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}